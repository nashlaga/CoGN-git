<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_up = spr_player_walk_up
s_down = spr_player_walk_down
s_left = spr_player_walk_left
s_right = spr_player_walk_right

spd = 4
moving = 0
dir = 0
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

up = keyboard_check(ord("W"))
down = keyboard_check(ord("S"))
left = keyboard_check(ord("A"))
right = keyboard_check(ord("D"))

if up  {phy_position_y -= spd sprite_index = s_up moving = 1}
if down  {phy_position_y += spd sprite_index = s_down moving = 1}
if left  {phy_position_x -= spd sprite_index = s_left moving = 1}
if right  {phy_position_x += spd sprite_index = s_right moving = 1}

if !up and !down and !left and !right {moving = 0}

if moving = 1 {
    image_speed = 0.5
} else {
    image_speed = 0
    image_index = 0
}




//move if it can
/*
if up and !place_meeting(x,y-spd,obj_solid) {
    y-=spd   
    dir = 0 moving = 1 sprite_index = s_up
}
if down and !place_meeting(x,y+spd,obj_solid) {
    y+=spd   
    dir = 2 moving = 1 sprite_index = s_down
}
if left and !place_meeting(x-spd,y,obj_solid) {
    x-=spd   
    dir = 3 moving = 1 sprite_index = s_left
}
if right and !place_meeting(x+spd,y,obj_solid) {
    x+=spd   
    dir = 1 moving = 1 sprite_index = s_right
}

if !up and !down and !left and !right {moving = 0}
*/


/*
switch (dir){
    case 0: sprite_index=s_up
    case 1: sprite_index=s_right
    case 2: sprite_index=s_down
    case 3: sprite_index=s_left
}
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to rooms leik

player_x = other.player_x
player_y = other.player_y

room_goto(other.door_room)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to new pos

x=player_x
y=player_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Var init
player_x = xstart
player_y = ystart

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nearsign = instance_nearest(x,y,obj_speaker)
with nearsign
    if (!instance_exists(dialog)) {
        dialog = instance_create(x+xoffset,y+yoffset,obj_dialog)
        dialog.text = text
    } else {
        dialog.text_page++
        dialog.text_count = 0
        if dialog.text_page &gt; array_length_1d(dialog.text)-1 {
            with dialog {
                instance_destroy()
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,40</point>
    <point>44,40</point>
    <point>44,64</point>
    <point>8,64</point>
  </PhysicsShapePoints>
</object>
